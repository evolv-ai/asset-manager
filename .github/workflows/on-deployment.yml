name: Deploy to Environment

on:
  deployment

jobs:
  deploy:
    name: Deploy to Environment
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        id: set_variables
        run: |
          export RELEASE_TAG=${{github.event.deployment.ref}}
          echo ::set-output name=SEM_VER::${RELEASE_TAG/release\/}
          if [[ "${{github.event.deployment.environment}}" == "prod" ]]
          then
            echo ::set-output name=SLACK_CHANNEL::deploy-prod
            echo ::set-output name=CREATE_RELEASE::true
            echo ::set-output name=PRERELEASE::false
          elif [[ "${{github.event.deployment.environment}}" == "staging" ]]
          then
            echo ::set-output name=SLACK_CHANNEL::deploy-staging
            echo ::set-output name=CREATE_RELEASE::true
            echo ::set-output name=PRERELEASE::true
          else
            echo ::set-output name=SLACK_CHANNEL::deploy
            echo ::set-output name=CREATE_RELEASE::false
          fi
      - name: Checkout Ref
        uses: actions/checkout@v1
        with: 
          ref: ${{ github.event.deployment.ref }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ steps.set_variables.outputs.SLACK_CHANNEL }}
          SLACK_TITLE: '${{ github.repository }} deployment to ${{ github.event.deployment.environment }} starting :crossed_fingers:'
          SLACK_MESSAGE: 'Deploying tag <https://github.com/${{ github.repository }}/tree/${{ github.event.deployment.ref }}|${{ github.event.deployment.ref }}> to ${{ github.event.deployment.environment }}.'
          SLACK_COLOR: '#ffff00'
      - name: Deploy Code
        uses: evolv-ai/github-actions/cicd/python3.7-nodejs13@master
        with:
          script: /scripts/release.sh
        env:
          EVOLV_STAGE: ${{ github.event.deployment.environment }}
          SEM_VER: ${{ steps.set_variables.outputs.SEM_VER }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2
      - name: Update Deployment Status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ github.event.deployment.id }}
      - name: Create Github Release (success)
        uses: meeDamian/github-release@2.0
        if: success() && ${{ steps.set_variables.outputs.CREATE_RELEASE }}
        with:
          token: ${{ github.token }}
          tag: ${{github.event.deployment.ref}}
          name: ${{github.event.deployment.ref}}
          prerelease: ${{ steps.set_variables.outputs.PRERELEASE }}
          allow_override: true
      - name: Slack Notification (success)
        if: success()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ steps.set_variables.outputs.SLACK_CHANNEL }}
          SLACK_TITLE: '${{ github.repository }} deployment to ${{ github.event.deployment.environment }} success :rocket:'
          SLACK_MESSAGE: 'Deployment of tag <https://github.com/${{ github.repository }}/tree/${{ github.event.deployment.ref }}|${{ github.event.deployment.ref }}> to ${{ github.event.deployment.environment }} succeeded.'
          SLACK_COLOR: '#33cc33'
      - name: Update Deployment Status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Slack Notification (failure)
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ steps.set_variables.outputs.SLACK_CHANNEL }}
          SLACK_TITLE: '${{ github.repository }} deployment to ${{ github.event.deployment.environment }} failure :boom:'
          SLACK_MESSAGE: 'Deployment of tag <https://github.com/${{ github.repository }}/tree/${{ github.event.deployment.ref }}|${{ github.event.deployment.ref }}> to ${{ github.event.deployment.environment }} failed.'
          SLACK_COLOR: '#ff0000'
