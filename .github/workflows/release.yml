name: Deploy to Staging On Release Tag

on:
  push:
    tags:
      - 'release/*'

jobs:
  deploy:
    name: Deploy to Staging

    runs-on: ubuntu-latest

    steps:
      - name: Get the tag
        id: get_tag
        run: |
          echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=SEM_VER::${GITHUB_REF/refs\/tags\/release\/}
      - uses: actions/checkout@v1
        with: 
          ref: ${{ steps.get_tag.outputs.TAG }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deploy-staging
          SLACK_TITLE: 'asset-manager deployment starting :crossed_fingers:'
          SLACK_MESSAGE: 'Deploying tag <https://github.com/evolv-ai/asset-manager/tree/${{ steps.get_tag.outputs.TAG }}|${{ steps.get_tag.outputs.TAG }}> to staging.'
          SLACK_COLOR: '#ffff00'
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          ref: ${{ steps.get_tag.outputs.TAG }}
          description: ${{ steps.get_tag.outputs.TAG }}
          environment: staging
      - uses: evolv-ai/github-actions/release@master
        name: Deploy the code
        with:
          stage-to-release: staging
          release-script: /scripts/release.sh
        env:
          SEM_VER: ${{ steps.get_tag.outputs.SEM_VER }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - uses: meeDamian/github-release@2.0
        if: success()
        with:
          token: ${{ github.token }}
          tag: ${{ steps.get_tag.outputs.SEM_VER }}
          name: ${{ steps.get_tag.outputs.SEM_VER }}
          prerelease: true
          allow_override: true
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Slack Notification (Success)
        if: success()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deploy-staging
          SLACK_TITLE: 'asset-manager deployment success :rocket:'
          SLACK_MESSAGE: 'Deployment of tag <https://github.com/evolv-ai/asset-manager/tree/${{ steps.get_tag.outputs.TAG }}|${{ steps.get_tag.outputs.TAG }}> to staging succeeded.'
          SLACK_COLOR: '#33cc33'
      - name: Slack Notification (Failure)
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deploy-staging
          SLACK_TITLE: 'asset-manager deployment failure :boom:'
          SLACK_MESSAGE: 'Deployment of tag <https://github.com/evolv-ai/asset-manager/tree/${{ steps.get_tag.outputs.TAG }}|${{ steps.get_tag.outputs.TAG }}> to staging failed.'
          SLACK_COLOR: '#ff0000'
