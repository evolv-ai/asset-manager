name: Deploy to Staging On Release Tag

on:
  push:
    tags:
      - 'release/*'

jobs:
  deploy:
    name: Deploy to Staging

    runs-on: ubuntu-latest

    steps:
      - name: Get the tag
        id: get_tag
        run: |
          echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=SEM_VER::${GITHUB_REF/refs\/tags\/release\/}
      - uses: actions/checkout@v1
        with: 
          ref: ${{ steps.get_tag.outputs.TAG }}
      - uses: meeDamian/github-release@2.0
        with:
          token: ${{ github.token }}
          tag: v${{ steps.get_tag.outputs.SEM_VER }}
          name: v${{ steps.get_tag.outputs.SEM_VER }}
          prerelease: true
          draft: true
          allow_override: true
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: staging
      - uses: evolv-ai/github-actions/release@master
        name: Deploy the code
        with:
          stage-to-release: staging
          release-script: /scripts/myman.sh
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - uses: meeDamian/github-release@2.0
        if: success()
        with:
          token: ${{ github.token }}
          tag: v${{ steps.get_tag.outputs.SEM_VER }}
          name: v${{ steps.get_tag.outputs.SEM_VER }}
          prerelease: true
          allow_override: true
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
